---
- name: Install the environment on the server
  hosts: prod_servers
  become: yes

  tasks:
    - name: Install tree command
      apt: name=tree state=latest

    - name: Install curl command
      apt: name=curl state=latest

    - name: Install git
      apt: name=git state=latest

    #    - name: Add github.com to known hosts
    #      shell: |
    #        ssh-keyscan github.com >> ~/.ssh/known_hosts

    - name: Populate service facts
      ansible.builtin.service_facts:

    - name: Install docker
      shell: |
        curl -fsSL https://get.docker.com -o get-docker.sh
        sh get-docker.sh
        groupadd docker
        usermod -aG docker $USER
      when: ansible_facts.services["docker.service"] is not defined

    - name: Install docker-compose
      shell: |
        curl -LO https://github.com/docker/compose/releases/download/v2.2.3/docker-compose-linux-x86_64
        chmod +x ./docker-compose-linux-x86_64
        mv ./docker-compose-linux-x86_64 /usr/local/bin/docker-compose
      args:
        creates: /usr/local/bin/docker-compose

    - name: Install minikube
      shell: |
        curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
        chmod +x ./minikube
        mv ./minikube /usr/local/bin/minikube
      args:
        creates: /usr/local/bin/minikube

    - name: Install kubectl
      shell: |
        curl -LO https://dl.k8s.io/release/`curl -LS https://dl.k8s.io/release/stable.txt`/bin/linux/amd64/kubectl 
        chmod +x ./kubectl
        mv ./kubectl /usr/local/bin/kubectl
      args:
        creates: /usr/local/bin/kubectl

    - name: Check image jenkins_server exist
      shell: docker images | grep jenkins_server
      register: j_result
      ignore_errors: true
      changed_when: false

    - name: Create docker image jenkins
      shell: |
        mkdir -p ./tmp
        cd ./tmp
        git clone https://github.com/SergeyPoletaev/gsk-16-infra.git
        docker build -t jenkins_server ./gsk-16-infra/jenkins/server
        docker run --name jenkins_server \
          -p 9090:8080 -p 50000:50000 \
          -v /var/run/docker.sock:/var/run/docker.sock \
          -v /tmp:/var/jenkins_home \
          -d jenkins_server
        docker stop jenkins_server
        rm -R ./gsk-16-infra/ && cd ~/
      when: j_result is failed

    - name: Check image postgres exist
        shell: docker images | grep postgres
        register: p_result
        ignore_errors: true
        changed_when: false





